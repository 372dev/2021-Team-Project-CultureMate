
-------------------------------- TICKET --------------------------------

DROP TABLE TICKET;

DROP SEQUENCE SEQ_TICKET_NO;

CREATE TABLE TICKET(
    TICKET_NUM NUMBER NOT NULL,
    MT20ID VARCHAR2(200) NOT NULL,
    PRFNM VARCHAR2(200) NOT NULL,
    TICKET_DATE VARCHAR2(200) NOT NULL,
    ID NUMBER NOT NULL,
    USER_ID VARCHAR2(200) NOT NULL,
    TICKET_QTY NUMBER NOT NULL,
    TICKET_TIME DATE DEFAULT SYSDATE NOT NULL,
    CHANGE_TIME DATE DEFAULT SYSDATE NOT NULL,
    PCSEGUIDANCE VARCHAR2(200) NOT NULL,
    TICKET_SEAT VARCHAR2(200) NOT NULL,
    TICKET_STATUS VARCHAR2(200) DEFAULT 'Y' NOT NULL
);

COMMENT ON COLUMN "TICKET"."TICKET_NUM" IS '예매번호';
COMMENT ON COLUMN "TICKET"."MT20ID" IS '공연ID';
COMMENT ON COLUMN "TICKET"."PRFNM" IS '공연명';
COMMENT ON COLUMN "TICKET"."TICKET_DATE" IS '공연날짜';
COMMENT ON COLUMN "TICKET"."ID" IS '회원번호';
COMMENT ON COLUMN "TICKET"."USER_ID" IS '아이디';
COMMENT ON COLUMN "TICKET"."TICKET_QTY" IS '인원';
COMMENT ON COLUMN "TICKET"."TICKET_TIME" IS '예매시작';
COMMENT ON COLUMN "TICKET"."CHANGE_TIME" IS '수정시각';
COMMENT ON COLUMN "TICKET"."PCSEGUIDANCE" IS '티켓가격';
COMMENT ON COLUMN "TICKET"."TICKET_SEAT" IS '좌석정보';
COMMENT ON COLUMN "TICKET"."TICKET_STATUS" IS '상태';

CREATE SEQUENCE SEQ_TICKET_NO;

COMMIT;

ROLLBACK;

SELECT * FROM MEMBER WHERE ID = 23;

-- 예매회수 구하기
SELECT COUNT(*)
FROM TICKET
WHERE ID = 23;

-- 회원등급
-- 기본 '친구', 5회 이상 '친한친구(5퍼 할인)', 10회 이상 '베스트프랜드(10퍼 할인)'

UPDATE MEMBER SET 
RANK = '친한친구'
WHERE ID = 1;

SELECT *
FROM MEMBER
WHERE ID = 1;


COMMIT;

-------------------------------------------------------------------------

-------------------------------- MEMBER --------------------------------

CREATE SEQUENCE MEM_SEQ; -- ID

CREATE TABLE MEMBER(
    ID NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(60) NOT NULL,
    USER_NICK VARCHAR2(20) NOT NULL,
    USER_NAME VARCHAR2(10) NOT NULL,
    USER_ROLE VARCHAR2(15) DEFAULT 'ROLE_USER', -- ROLE_USER / ROLE_ADMIN
    DATE_BIRTH DATE DEFAULT SYSDATE,
    GENDER VARCHAR2(10) NOT NULL,
    EMAIL VARCHAR2(100) NOT NULL,
    PHONE VARCHAR2(15) NOT NULL,
    POSTCODE VARCHAR2(15) NOT NULL,
    ADDRESS VARCHAR2(100) NOT NULL,
    DETAIL_ADDR VARCHAR2(100) NOT NULL,
    EXTRA_ADDR VARCHAR2(100), -- 도로명주소를 지번주소로
    RANK VARCHAR2(20) DEFAULT '친구',
    STATUS VARCHAR2(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
    AUTHKEY VARCHAR2(50)
); 

-- TODO 구매이력, 회원등급

COMMIT;


SELECT * FROM MEMBER;

DROP TABLE MEMBER;

COMMENT ON COLUMN MEMBER.ID IS '회원번호';
COMMENT ON COLUMN MEMBER.USER_ID IS '아이디';
COMMENT ON COLUMN MEMBER.PASSWORD IS '비밀번호';
COMMENT ON COLUMN MEMBER.USER_NICK IS '닉네임';
COMMENT ON COLUMN MEMBER.USER_NAME IS '본명';
COMMENT ON COLUMN MEMBER.USER_ROLE IS '회원타입';
COMMENT ON COLUMN MEMBER.DATE_BIRTH IS '생년월일';
COMMENT ON COLUMN MEMBER.GENDER IS '성별';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.POSTCODE IS '우편번호';
COMMENT ON COLUMN MEMBER.ADDRESS IS '도로명주소';
COMMENT ON COLUMN MEMBER.DETAIL_ADDR IS '상세주소';
COMMENT ON COLUMN MEMBER.EXTRA_ADDR IS '참고항목';
COMMENT ON COLUMN MEMBER.RANK IS '회원등급';
COMMENT ON COLUMN MEMBER.STATUS IS '탈퇴여부';

-------------------------------------------------------------------------

-------------------------------- BoxOffice 테이블 --------------------------------

CREATE TABLE BOXOFFICE (
    MT20ID VARCHAR2(100) PRIMARY KEY,
    AREA VARCHAR2(100),
    PRFDTCNT VARCHAR2(100),
    PRFPD VARCHAR2(100),
    CATE VARCHAR2(100),
    PRFPLCNM VARCHAR2(300),
    PRFNM VARCHAR2(300),
    RNUM VARCHAR2(100),
    SEATCNT VARCHAR2(100),
    POSTER VARCHAR2(300)
);

COMMENT ON COLUMN BOXOFFICE.MT20ID IS '공연ID';
COMMENT ON COLUMN BOXOFFICE.AREA IS '지역';
COMMENT ON COLUMN BOXOFFICE.PRFDTCNT IS '상연횟수';
COMMENT ON COLUMN BOXOFFICE.PRFPD IS '공연기간';
COMMENT ON COLUMN BOXOFFICE.CATE IS '장르';
COMMENT ON COLUMN BOXOFFICE.PRFPLCNM IS '공연장';
COMMENT ON COLUMN BOXOFFICE.PRFNM IS '공연명';
COMMENT ON COLUMN BOXOFFICE.RNUM IS '순위';
COMMENT ON COLUMN BOXOFFICE.SEATCNT IS '좌석수';
COMMENT ON COLUMN BOXOFFICE.POSTER IS '포스터';

-------------------------------------------------------------------------
--------------------------- Review 테이블 ----------------------------------

CREATE TABLE REVIEW(
  REVIEW_ID NUMBER PRIMARY KEY,
  MT20ID VARCHAR2(100),
  REVIEW_CONTENT VARCHAR2(400),
  REVIEW_DATE DATE DEFAULT SYSDATE,
  LIKE_COUNT NUMBER DEFAULT 0,
  REVIEW_RATING VARCHAR2(50) NOT NULL,
  STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N')),
  ID NUMBER,
  FOREIGN KEY (ID) REFERENCES MEMBER,
  USER_NICK VARCHAR2(20)
);

CREATE SEQUENCE SEQ_REVIEW_ID;


COMMENT ON COLUMN REVIEW.REVIEW_ID IS '리뷰 아이디';
COMMENT ON COLUMN REVIEW.MT20ID IS '공연ID';
COMMENT ON COLUMN REVIEW.REVIEW_CONTENT IS '리뷰 내용';
COMMENT ON COLUMN REVIEW.REVIEW_DATE IS '리뷰 작성 날짜';
COMMENT ON COLUMN REVIEW.LIKE_COUNT IS '좋아요 수';
COMMENT ON COLUMN REVIEW.REVIEW_RATING IS '리뷰 별점';
COMMENT ON COLUMN REVIEW.STATUS IS '리뷰 상태';
COMMENT ON COLUMN REVIEW.ID IS '회원번호';
COMMENT ON COLUMN REVIEW.USER_NICK IS '';

-------------------------------------------------------------------------
--------------------------- MATEBOARD 테이블 ----------------------------------

CREATE TABLE MATEBOARD(	
    MATE_ID NUMBER,
    MATE_WRITER_ID NUMBER,
    MATE_OPEN VARCHAR2(20),
    MATE_SHOW VARCHAR2(20),
    MATE_AGE VARCHAR2(20),
    MATE_GENDER VARCHAR2(20),
    MATE_NUM VARCHAR2(20),
    MATE_LOC VARCHAR2(20),
	MATE_TITLE VARCHAR2(100), 
	MATE_CONTENT VARCHAR2(2000), 
	MATE_COUNT NUMBER DEFAULT 0, 
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
    MATE_CREATE_DATE DATE DEFAULT SYSDATE, 
    MATE_MODIFY_DATE DATE DEFAULT SYSDATE,
    CONSTRAINT PK_MATE_ID PRIMARY KEY(MATE_ID),
    CONSTRAINT FK_MATE_WRITER FOREIGN KEY(MATE_WRITER_ID) REFERENCES MEMBER(ID) ON DELETE SET NULL  
);

CREATE SEQUENCE SEQ_MATE_ID;

-------------------------------------------------------------------------
--------------------------- MATEREPLY 테이블 ----------------------------------

CREATE TABLE MATEREPLY(
  MATEREPLY_ID NUMBER PRIMARY KEY,
  MATE_ID NUMBER,
  MATEREPLY_WRITER_ID NUMBER,
  MATEREPLY_GROUP NUMBER,
  MATEREPLY_CONTENT VARCHAR2(400),
  STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
  MATEREPLY_CREATE_DATE DATE DEFAULT SYSDATE,
  MATEREPLY_MODIFY_DATE DATE DEFAULT SYSDATE,  
  FOREIGN KEY (MATE_ID) REFERENCES MATEBOARD,
  FOREIGN KEY (MATEREPLY_WRITER_ID) REFERENCES MEMBER
);

CREATE SEQUENCE SEQ_MATEREPLY_ID;

-------------------------------------------------------------------------
--------------------------- SHAREBOARD 테이블 ----------------------------



-------------------------------------------------------------------------
--------------------------- SHAREREPLY 테이블 ----------------------------



-------------------------------------------------------------------------































